version: "3.7"
services:
  static:
    build:
      context: .
      dockerfile: nginx.dockerfile
    labels:
      - traefik.docker.network=ContactTracing-Deploy_frontend
      - traefik.enable=true
      - traefik.backend=static
      - traefik.backend.loadbalancer.method=wrr
      - "traefik.frontend.rule=Host(${deploy_domain}) && Path('/static/')"
      - traefik.frontend.passHostHeader=true
      - traefik.port=7000
      - traefik.protocol=http
    networks:
      - frontend
  api:
    build:
      context: .
      dockerfile: api.dockerfile
    depends_on:
      - db
    networks:
      - frontend
      - backend
    labels:
      - traefik.enable=true
      - traefik.backend=api
      - traefik.backend.loadbalancer.method=wrr
      - traefik.docker.network=ContactTracing-Deploy_frontend
      - "traefik.frontend.rule=Host(${deploy_domain}) && Path('/api/')"
      - traefik.frontend.passHostHeader=true
      - traefik.port=8000
      - traefik.protocol=http
  db:
    image: cockroachdb/cockroach:latest
    networks:
      - backend
    volumes:
      - db
  traefik:
    image: traefik:latest
    build:
      context: .
      dockerfile: traefik.dockerfile
    environment:
      - 'CLOUDFLARE_EMAIL="${cloudflareemail}"'
      - 'CLOUDFLARE_API_KEY="${cloudflaretoken}"'
      - 'constraint:node==manager'
      - 'DOCKER_HOST=tcp://example.com:2375'
    labels:
      - traefik.enable=true
      - traefik.backend=traefik
      - traefik.backend.loadbalancer.method=wrr
      - traefik.docker.network=ContactTracing-Deploy_frontend
      - "traefik.frontend.rule=Host(traefik.${deploy_domain})"
      - traefik.frontend.passHostHeader=true
      - traefik.port=7000
      - traefik.protocol=http
    networks:
      - frontend
      - default
    # networks:
    #   - front-tier
    #   - back-tier
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    restart: always
    depends_on:
      - static
      - api
    deploy:
      mode: replicated
      labels:
        - traefik.enable=true
        - traefik.backend=traefik
        - traefik.backend.loadbalancer.method=wrr
        # - traefik.docker.network=OceanTerraSwarm_front-tier
        - 'traefik.frontend.rule=Host:traefik.${deploy_domain}'
        - traefik.frontend.passHostHeader=true
        - traefik.port=8080
        - traefik.protocol=http
      placement:
        constraints:
          - node.role == manager
    volumes:
#      - /etc/ssl:/etc/ssl
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
volumes:
  db:
networks:
  frontend:
  backend:
